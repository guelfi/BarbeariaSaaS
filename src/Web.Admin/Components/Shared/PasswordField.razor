@using MudBlazor

<MudTextField @bind-Value="Value"
              Label="@Label"
              Variant="@Variant"
              InputType="@currentInputType"
              Required="@Required"
              RequiredError="@RequiredError"
              Class="@Class"
              FullWidth="@FullWidth"
              Disabled="@Disabled"
              Placeholder="@Placeholder"
              HelperText="@HelperText"
              Adornment="Adornment.End"
              AdornmentIcon="@passwordIcon"
              OnAdornmentClick="TogglePasswordVisibility"
              AdornmentAriaLabel="@(showPassword ? "Ocultar senha" : "Mostrar senha")" />

@code {
    [Parameter] public string Value { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public string Label { get; set; } = "Senha";
    [Parameter] public Variant Variant { get; set; } = Variant.Outlined;
    [Parameter] public bool Required { get; set; } = false;
    [Parameter] public string RequiredError { get; set; } = "Senha é obrigatória";
    [Parameter] public string Class { get; set; } = string.Empty;
    [Parameter] public bool FullWidth { get; set; } = true;
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public string Placeholder { get; set; } = string.Empty;
    [Parameter] public string HelperText { get; set; } = string.Empty;

    private bool showPassword = false;
    private InputType currentInputType => showPassword ? InputType.Text : InputType.Password;
    private string passwordIcon => showPassword ? Icons.Material.Filled.VisibilityOff : Icons.Material.Filled.Visibility;

    private async Task TogglePasswordVisibility()
    {
        showPassword = !showPassword;
        StateHasChanged();
        
        // Optional: Add subtle animation feedback
        await Task.Delay(50);
    }

    protected override async Task OnParametersSetAsync()
    {
        if (ValueChanged.HasDelegate)
        {
            await ValueChanged.InvokeAsync(Value);
        }
    }
}